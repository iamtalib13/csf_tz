[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-12-09 20:51:06.119285",
  "module": "Trade In",
  "name": "Trade In Child Table",
  "script": "// Parent Doctype: Sales Invoice\r\nfrappe.ui.form.on('Sales Invoice', {\r\n    custom_is_trade_in: function(frm) {\r\n        if (frm.doc.custom_is_trade_in) {\r\n            // Check if \"Trade In\" item is already added\r\n            const exists = frm.doc.items.some(item => item.item_code === \"Trade In\");\r\n            if (!exists) {\r\n                // Add a new row with \"Trade In\"\r\n                let row = frm.add_child('items', { \r\n                    item_code: \"Trade In\",\r\n                    item_name: \"Trade In\",\r\n                    income_account: \"Trade In Control - TC\", // Set income account\r\n                    uom: \"Nos\", // Set unit of measure\r\n                    qty: 1, // Set quantity to 1\r\n                    description: \"Trade-In\" // Set description\r\n                });\r\n                frm.refresh_field('items');\r\n            }\r\n        } else {\r\n            // Confirm before removing \"Trade In\"\r\n            frappe.confirm(\r\n                'Are you sure you want to remove the \"Trade In\" item?',\r\n                () => {\r\n                    // Remove the \"Trade In\" item if exists\r\n                    frm.doc.items = frm.doc.items.filter(item => item.item_code !== \"Trade In\");\r\n                    frm.refresh_field('items');\r\n                },\r\n                () => {\r\n                    // Re-check the checkbox if user cancels\r\n                    frm.set_value('custom_is_trade_in', 1);\r\n                }\r\n            );\r\n        }\r\n    },\r\n\r\n    onload: function(frm) {\r\n        set_trade_in_fields_readonly(frm);\r\n    },\r\n\r\n    refresh: function(frm) {\r\n        set_trade_in_fields_readonly(frm);\r\n    }\r\n});\r\n\r\n// Child Table: Items\r\nfrappe.ui.form.on('Sales Invoice Item', {\r\n    custom_trade_in_qty: function(frm, cdt, cdn) {\r\n        let row = locals[cdt][cdn];\r\n        calculate_row_trade_in_value(frm, cdt, cdn);\r\n    },\r\n    custom_trade_in_item: function(frm, cdt, cdn) {\r\n        // Reset serial numbers when item changes\r\n        frappe.model.set_value(cdt, cdn, 'custom_trade_in_serial_no', '');\r\n    },\r\n    custom_trade_in_incoming_rate: function(frm, cdt, cdn) {\r\n        calculate_row_trade_in_value(frm, cdt, cdn);\r\n    },\r\n    item_code: function(frm, cdt, cdn) {\r\n        set_item_fields_editable(frm, cdt, cdn);\r\n    },\r\n    onload: function(frm, cdt, cdn) {\r\n        set_trade_in_fields_readonly(frm, cdt, cdn);\r\n    }\r\n});\r\n\r\n// Calculate custom_total_trade_in_value for a specific row in the items child table\r\nfunction calculate_row_trade_in_value(frm, cdt, cdn) {\r\n    let row = locals[cdt][cdn];\r\n\r\n    // Calculate custom_total_trade_in_value as custom_trade_in_qty * custom_trade_in_incoming_rate\r\n    let total_value = (row.custom_trade_in_qty || 0) * (row.custom_trade_in_incoming_rate || 0);\r\n    frappe.model.set_value(cdt, cdn, 'custom_total_trade_in_value', total_value);\r\n\r\n    // Set rate field as negative\r\n    frappe.model.set_value(cdt, cdn, 'rate', total_value * -1); // Set rate to negative value\r\n}\r\n\r\n// Function to set trade-in fields read-only based on conditions\r\nfunction set_trade_in_fields_readonly(frm) {\r\n    frm.doc.items.forEach((row) => {\r\n        // Access the specific field in the child table\r\n        var dfItemCode = frappe.meta.get_docfield(\"Sales Invoice Item\", \"item_code\", row.name);\r\n        var dfItemName = frappe.meta.get_docfield(\"Sales Invoice Item\", \"item_name\", row.name);\r\n        var dfRate = frappe.meta.get_docfield(\"Sales Invoice Item\", \"rate\", row.name);\r\n        var dfDiscount = frappe.meta.get_docfield(\"Sales Invoice Item\", \"posa_special_discount\", row.name);\r\n        var dfSpecialRate = frappe.meta.get_docfield(\"Sales Invoice Item\", \"posa_special_rate\", row.name);\r\n\r\n        if (row.item_code === \"Trade In\") {\r\n            // Make fields read-only for Trade In items\r\n            dfItemCode.read_only = 1;        // Set item_code to read-only\r\n            dfItemName.read_only = 1;        // Set item_name to read-only\r\n            dfRate.read_only = 1;            // Set rate to read-only\r\n            dfDiscount.read_only = 1;        // Set posa_special_discount to read-only\r\n            dfSpecialRate.read_only = 1;     // Set posa_special_rate to read-only\r\n        } else {\r\n            // If not Trade In, make fields editable\r\n            dfItemCode.read_only = 0;        // Make item_code editable\r\n            dfItemName.read_only = 0;        // Make item_name editable\r\n            dfRate.read_only = 0;            // Make rate editable\r\n            dfDiscount.read_only = 0;        // Make posa_special_discount editable\r\n            dfSpecialRate.read_only = 0;     // Make posa_special_rate editable\r\n        }\r\n    });\r\n\r\n    // Refresh the child table to reflect changes\r\n    frm.refresh_field('items');\r\n}\r\n\r\n// Function to set fields editable based on item code\r\nfunction set_item_fields_editable(frm, cdt, cdn) {\r\n    let row = locals[cdt][cdn];\r\n\r\n    // Call to set fields read-only if item code is Trade In\r\n    if (row.item_code === \"Trade In\") {\r\n        set_trade_in_fields_readonly(frm);\r\n    } else {\r\n        // Make fields editable for the current row\r\n        var df = frappe.meta.get_docfield(\"Sales Invoice Item\", \"item_code\", row.name);\r\n        df.read_only = 0;\r\n\r\n        var dfRate = frappe.meta.get_docfield(\"Sales Invoice Item\", \"rate\", row.name);\r\n        dfRate.read_only = 0;\r\n\r\n        var dfDiscount = frappe.meta.get_docfield(\"Sales Invoice Item\", \"posa_special_discount\", row.name);\r\n        dfDiscount.read_only = 0;\r\n\r\n        var dfSpecialRate = frappe.meta.get_docfield(\"Sales Invoice Item\", \"posa_special_rate\", row.name);\r\n        dfSpecialRate.read_only = 0; // Make posa_special_rate editable\r\n\r\n        // Refresh fields to reflect changes\r\n        frm.refresh_field('items');\r\n    }\r\n}\r\n",
  "view": "Form"
 }
]